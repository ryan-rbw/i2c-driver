#!/bin/bash

# Pre-commit hook for I2C A78 Driver
# Runs tests and checks before allowing commits

set -e

echo "Running pre-commit checks for I2C A78 Driver..."

# Change to repository root
cd "$(git rev-parse --show-toplevel)"

# Check if we're in the tests directory or need to change to it
if [ -d "tests" ]; then
    cd tests
elif [ -f "test_runner.py" ]; then
    # Already in tests directory
    :
else
    echo "Error: Cannot find tests directory"
    exit 1
fi

# 1. Build all tests
echo "Building tests..."
if ! make clean && make all; then
    echo "❌ Build failed! Please fix compilation errors before committing."
    exit 1
fi

# 2. Run core test suite
echo "Running core tests..."
if ! make test; then
    echo "❌ Core tests failed! Please fix failing tests before committing."
    exit 1
fi

# 3. Run static analysis if available
if command -v cppcheck >/dev/null 2>&1; then
    echo "Running static analysis..."
    if ! make static-analysis; then
        echo "⚠️  Static analysis found issues. Consider fixing them."
        # Don't fail on static analysis warnings, just warn
    fi
else
    echo "⚠️  cppcheck not found, skipping static analysis"
fi

# 4. Check code style (basic check for kernel coding standards)
echo "Checking code style..."

# Check for basic coding standard violations
STYLE_ERRORS=0

# Check for tabs vs spaces (kernel uses tabs for indentation)
if find ../src -name "*.c" -o -name "*.h" | xargs grep -l "^    "; then
    echo "❌ Found spaces for indentation (kernel code should use tabs)"
    STYLE_ERRORS=1
fi

# Check for trailing whitespace
if find ../src -name "*.c" -o -name "*.h" | xargs grep -l "[[:space:]]$"; then
    echo "❌ Found trailing whitespace"
    STYLE_ERRORS=1
fi

# Check line length (warn at 80, error at 120)
if find ../src -name "*.c" -o -name "*.h" | xargs grep -n ".\{121\}"; then
    echo "❌ Lines longer than 120 characters found"
    STYLE_ERRORS=1
fi

if [ $STYLE_ERRORS -eq 1 ]; then
    echo "❌ Code style issues found. Please fix before committing."
    echo "Hint: Use 'make check' to run full style checks if available"
    exit 1
fi

# 5. Quick performance test
echo "Running quick performance check..."
if ! timeout 30 make performance 2>/dev/null; then
    echo "⚠️  Performance tests timed out or failed (non-blocking)"
fi

echo "✅ All pre-commit checks passed!"
echo "Commit ready to proceed."

exit 0