name: I2C A78 Driver CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        gcc-version: [9, 10, 11, 12]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-${{ matrix.gcc-version }} python3 python3-pip valgrind cppcheck
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${{ matrix.gcc-version }} 100
        pip3 install coverage pytest
        
    - name: Check dependencies
      run: |
        cd tests && make install-deps
        
    - name: Build tests
      run: |
        cd tests && make all
        
    - name: Run comprehensive test suite
      run: |
        cd tests && make comprehensive
        
    - name: Run code coverage
      run: |
        cd tests && make coverage
        
    - name: Run static analysis
      run: |
        cd tests && make static-analysis
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-gcc${{ matrix.gcc-version }}
        path: |
          test_results/
          tests/*.gcov
          
    - name: Upload coverage to Codecov
      if: matrix.gcc-version == 11
      uses: codecov/codecov-action@v4
      with:
        files: tests/*.gcov
        fail_ci_if_error: false

  kernel-compatibility:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        kernel-headers: ['5.4', '5.15', '6.1', '6.5']
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Install kernel headers
      run: |
        sudo apt-get update
        sudo apt-get install -y linux-headers-generic gcc python3
        
    - name: Test kernel compatibility
      run: |
        cd src/driver
        # Test compilation against different kernel versions would go here
        echo "Kernel compatibility testing for ${{ matrix.kernel-headers }}"
        
  documentation:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check documentation
      run: |
        # Check that all public functions are documented
        if find src/ -name "*.c" -o -name "*.h" | xargs grep -l "static inline\|extern\|EXPORT_SYMBOL" | xargs grep -L "/**" | grep -q .; then
          echo "Missing documentation found"
          exit 1
        else
          echo "Documentation check passed"
        fi
        
    - name: Validate device tree bindings
      run: |
        if [ -f docs/devicetree/bindings/i2c/arm,a78-i2c.yaml ]; then
          echo "Device tree bindings found"
        else
          echo "Warning: Device tree bindings documentation missing"
        fi

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Security scan
      run: |
        # Check for common security issues in kernel code
        if find src/ -name "*.c" -exec grep -l "strcpy\|strcat\|sprintf\|gets" {} \; | grep -q .; then
          echo "Potential security issues found"
          exit 1
        else
          echo "Security check passed"
        fi
        
    - name: Check for secrets
      run: |
        # Check for potential hardcoded credentials in source files
        if find . -name "*.c" -o -name "*.h" | xargs grep -iE "(password|secret|api_key|token)\s*=\s*['\"][^'\"]+['\"]" 2>/dev/null; then
          echo "Potential hardcoded secrets found"
          exit 1
        else
          echo "No hardcoded secrets found"
        fi